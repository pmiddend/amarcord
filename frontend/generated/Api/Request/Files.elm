{-
   AMARCORD OpenAPI
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 2.5.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Files exposing
    ( createFileApiFilesPost
    , createFileSimpleApiFilesSimpleExtensionPost
    , deleteFileApiFilesDelete
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode
import File exposing (File)

createFileApiFilesPost : File -> String -> String -> Maybe String -> Api.Request Api.Data.JsonCreateFileOutput
createFileApiFilesPost file description deduplicate compress =
    Api.request
        "POST"
        "/api/files"
        []
        []
        []
        (Just <| Http.multipartBody <| List.filterMap identity [ Just <| Http.filePart "file" file, Just <| Http.stringPart "description" description, Just <| Http.stringPart "deduplicate" deduplicate, Maybe.map (Http.stringPart "compress") compress ])
        Api.Data.jsonCreateFileOutputDecoder


{-| This endpoint was specifically crafted to upload files in a simple way from external scripts, such as the CrystFEL scripts.     It doesn't need a multipart request and the file extension can be set using the path parameter (which is used to generate nice     .mtz and .pdb download URLs).
-}
createFileSimpleApiFilesSimpleExtensionPost : String -> Api.Request Api.Data.JsonCreateFileOutput
createFileSimpleApiFilesSimpleExtensionPost extension_path =
    Api.request
        "POST"
        "/api/files/simple/{extension}"
        [ ( "extension", identity extension_path ) ]
        []
        []
        Nothing
        Api.Data.jsonCreateFileOutputDecoder


deleteFileApiFilesDelete : Api.Data.JsonDeleteFileInput -> Api.Request Api.Data.JsonDeleteFileOutput
deleteFileApiFilesDelete jsonDeleteFileInput_body =
    Api.request
        "DELETE"
        "/api/files"
        []
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeJsonDeleteFileInput jsonDeleteFileInput_body)))
        Api.Data.jsonDeleteFileOutputDecoder


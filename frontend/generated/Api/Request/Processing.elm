{-
   AMARCORD OpenAPI
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 2.5.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Processing exposing
    ( indexingJobFinishSuccessfullyApiIndexingIndexingResultIdSuccessPost
    , indexingJobFinishWithErrorApiIndexingIndexingResultIdFinishWithErrorPost
    , indexingJobGetErrorlogApiIndexingIndexingResultIdErrorlogGet
    , indexingJobGetLogApiIndexingIndexingResultIdLogGet
    , indexingJobQueueForDataSetApiIndexingPost
    , indexingJobStillRunningApiIndexingIndexingResultIdStillRunningPost
    , readIndexingJobsApiIndexingGet
    , readIndexingParametersApiIndexingParametersDataSetIdGet
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

indexingJobFinishSuccessfullyApiIndexingIndexingResultIdSuccessPost : Int -> Api.Data.JsonIndexingResultFinishSuccessfully -> Api.Request Api.Data.JsonIndexingJobUpdateOutput
indexingJobFinishSuccessfullyApiIndexingIndexingResultIdSuccessPost indexingResultId_path jsonIndexingResultFinishSuccessfully_body =
    Api.request
        "POST"
        "/api/indexing/{indexingResultId}/success"
        [ ( "indexingResultId", String.fromInt indexingResultId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeJsonIndexingResultFinishSuccessfully jsonIndexingResultFinishSuccessfully_body)))
        Api.Data.jsonIndexingJobUpdateOutputDecoder


indexingJobFinishWithErrorApiIndexingIndexingResultIdFinishWithErrorPost : Int -> Api.Data.JsonIndexingResultFinishWithError -> Api.Request Api.Data.JsonIndexingJobUpdateOutput
indexingJobFinishWithErrorApiIndexingIndexingResultIdFinishWithErrorPost indexingResultId_path jsonIndexingResultFinishWithError_body =
    Api.request
        "POST"
        "/api/indexing/{indexingResultId}/finish-with-error"
        [ ( "indexingResultId", String.fromInt indexingResultId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeJsonIndexingResultFinishWithError jsonIndexingResultFinishWithError_body)))
        Api.Data.jsonIndexingJobUpdateOutputDecoder


indexingJobGetErrorlogApiIndexingIndexingResultIdErrorlogGet : Int -> Api.Request String
indexingJobGetErrorlogApiIndexingIndexingResultIdErrorlogGet indexingResultId_path =
    Api.request
        "GET"
        "/api/indexing/{indexingResultId}/errorlog"
        [ ( "indexingResultId", String.fromInt indexingResultId_path ) ]
        []
        []
        Nothing
        Json.Decode.string


indexingJobGetLogApiIndexingIndexingResultIdLogGet : Int -> Api.Request String
indexingJobGetLogApiIndexingIndexingResultIdLogGet indexingResultId_path =
    Api.request
        "GET"
        "/api/indexing/{indexingResultId}/log"
        [ ( "indexingResultId", String.fromInt indexingResultId_path ) ]
        []
        []
        Nothing
        Json.Decode.string


indexingJobQueueForDataSetApiIndexingPost : Api.Data.JsonCreateIndexingForDataSetInput -> Api.Request Api.Data.JsonCreateIndexingForDataSetOutput
indexingJobQueueForDataSetApiIndexingPost jsonCreateIndexingForDataSetInput_body =
    Api.request
        "POST"
        "/api/indexing"
        []
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeJsonCreateIndexingForDataSetInput jsonCreateIndexingForDataSetInput_body)))
        Api.Data.jsonCreateIndexingForDataSetOutputDecoder


indexingJobStillRunningApiIndexingIndexingResultIdStillRunningPost : Int -> Api.Data.JsonIndexingResultStillRunning -> Api.Request Api.Data.JsonIndexingJobUpdateOutput
indexingJobStillRunningApiIndexingIndexingResultIdStillRunningPost indexingResultId_path jsonIndexingResultStillRunning_body =
    Api.request
        "POST"
        "/api/indexing/{indexingResultId}/still-running"
        [ ( "indexingResultId", String.fromInt indexingResultId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeJsonIndexingResultStillRunning jsonIndexingResultStillRunning_body)))
        Api.Data.jsonIndexingJobUpdateOutputDecoder


readIndexingJobsApiIndexingGet : Maybe DBJobStatus -> Maybe Int -> Maybe Bool -> Api.Request Api.Data.JsonReadIndexingResultsOutput
readIndexingJobsApiIndexingGet status_query beamtimeId_query withFiles_query =
    Api.request
        "GET"
        "/api/indexing"
        []
        [ ( "status", Maybe.map Api.Data.stringFromDBJobStatus status_query ), ( "beamtimeId", Maybe.map String.fromInt beamtimeId_query ), ( "withFiles", Maybe.map (\val -> if val then "true" else "false") withFiles_query ) ]
        []
        Nothing
        Api.Data.jsonReadIndexingResultsOutputDecoder


readIndexingParametersApiIndexingParametersDataSetIdGet : Int -> Api.Request Api.Data.JsonReadIndexingParametersOutput
readIndexingParametersApiIndexingParametersDataSetIdGet dataSetId_path =
    Api.request
        "GET"
        "/api/indexing-parameters/{dataSetId}"
        [ ( "dataSetId", String.fromInt dataSetId_path ) ]
        []
        []
        Nothing
        Api.Data.jsonReadIndexingParametersOutputDecoder


[tool.poetry]
name = "amarcord"
version = "1.0.0"
description = "A ModulAR CollectOR of metaData - serial edition"
authors = ["Philipp Middendorf <philipp.middendorf@desy.de>", "CFEL-SC <sc@cfel.de>"]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
# for general DB access
SQLAlchemy = { version = "1.4.31", extras = ["asyncio"] }
# for mysql
pymysql = '1.0.2'
# for caching_sha2_password access in MySQL
cryptography = '3.4.8'
# for attributi: parsing/printing a delta
isodate = '0.6.1'
# for the config file
PyYAML = '5.4.1'
# for accessing XDG_CONFIG_HOME in the config file for example
xdg = '5.1.1'
# For parsing the arguments for programs (always required basically)
typed-argument-parser = '1.7.2'
# For the config file
pydantic = '1.10.2'
# numpy for processing results
numpy = { version = '1.21.4' }
# for zmq access in the daemon
pyzmq = '22.3.0'
# For validating units
pint = '0.16.1'
# for the daemon
msgpack = "1.0.2"

# For the Excel spreadsheet export
openpyxl = "3.0.9"

# disabled for now, it's a huge dependency
# kamzik3 = "0.7.7"

# for correcting UTC timezone for dates
python-dateutil = "2.8.2"
tqdm = "4.62.3"
# for the webserver
quart = "0.17.0"
# for the webserver
Quart-CORS = "0.5.0"
# asynchronous db client
aiosqlite = "0.17.0"
# asynchronous db client
asyncmy = "0.2.3"
# for time zone detection and conversion of timestamps in attributi
pytz = "2021.3"
# to test incoming files for their mime types
python-magic = "0.4.24"
# to parse/coparse toml files for xwiz
toml = "0.10.2"
# For the experiment simulator
randomname = "0.1.5"
# For http requests
aiohttp = "3.8.1"
alembic = "1.7.7"
# For the production-ready server
hypercorn = "0.13.2"

# For ZYLA cam image saving
Pillow = "9.1.0"

# For parsing the filter expressions
lark = "1.1.2"
structlog = "22.1.0"

[tool.poetry.dev-dependencies]
black = '22.3.0'
mypy = '0.971'
types-pytz = "2021.3.6"
pylint = '2.15.4'
perflint = '0.7.3'
pyfakefs = '4.7.0'
openpyxl-stubs = "0.1.21"
# for the daemon
msgpack-types = "0.1.0"
pytest = '6.2.5'
hypothesis = '6.27.1'
h5py = '3.7.0'
pytest-cov = '2.12.1'
types-python-dateutil = "2.8.3"
# slurm
types-requests = "2.26.0"
# config file
types-PyYAML = '5.4.12'
pytest-asyncio = "0.17.2"
isort = "5.10.1"
pytest-subprocess = "1.4.1"
cfel-pylint-checkers = "1.0.2"
sqlalchemy2-stubs = "0.0.2-alpha.24"

[tool.poetry.scripts]
# These are not all files in cli/, but the ones we definitely intend to keep.
amarcord-daemon = "amarcord.cli.daemon:main"
amarcord-webserver = "amarcord.cli.webserver:main"
amarcord-slurm-runner = "amarcord.cli.slurm_runner:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
force_single_line = "true"

[tool.pylint.'TYPECHECK']
ignored-modules = ["alembic.op","alembic.context"]
generated-members = ["SUB","SUBSCRIBE","EVENT_DISCONNECTED","EVENT_HANDSHAKE_SUCCEEDED","REQ","RCVTIMEO","EVENT_CONNECTED","PUB"]

[tool.pylint.'MASTER']
load-plugins=["pylint.extensions.typing","pylint.extensions.redefined_variable_type","cfel_pylint_checkers.no_direct_dict_access"]
extension-pkg-allow-list=["pydantic"]

[tool.pylint.'MESSAGES CONTROL']
disable=["invalid-name", "missing-module-docstring", "too-many-instance-attributes", "too-many-branches", "missing-class-docstring", "missing-function-docstring", "line-too-long", "missing-final-newline", "logging-not-lazy", "broad-except", "too-many-arguments", "bare-except", "too-few-public-methods", "too-many-locals", "too-many-nested-blocks", "too-many-statements", "too-many-public-methods", "too-many-return-statements", "blacklisted-name", "duplicate-code", "logging-fstring-interpolation", "too-many-lines", "too-many-boolean-expressions", "logging-format-interpolation", "raise-missing-from", "deprecated-typing-alias"]

[tool.mypy]
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = ["PIL", "pint", "randomname", "h5py"]
ignore_missing_imports = true
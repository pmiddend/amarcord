stages:
  - pretest
  - test
  - integration
  - deploy
  - upload-docker

# this is a workaround for etcd runner issues
default:
  tags:
    - DESY-intern

variables:
  AMARCORD_PYTHON_DOCKER: gitlab.desy.de:5555/cfel-sc-public/amarcord/poetry-base-image:v1-1-8
  # this is a workaround for the root CA issue in DESYâ€™s GitLab CI (will be fixed soon (tm))
  GIT_SSL_NO_VERIFY: "true"
  ELM_HOME: "$CI_PROJECT_DIR/.cache/elm"

check-shell-scripts:
  stage: pretest
  image: koalaman/shellcheck-alpine:latest
  script:
    - shellcheck ci/*.sh

check-requirements:
  image: $AMARCORD_PYTHON_DOCKER
  stage: test
  script:
    - ./ci/check-requirements.sh

pylint-and-mypy:
  image: $AMARCORD_PYTHON_DOCKER
  stage: test
  cache:
    key: poetry
    paths:
      - .cache/pypoetry
  script:
    - ./ci/pylint-and-mypy.sh

tests:
  image: $AMARCORD_PYTHON_DOCKER
  stage: test
  script:
    - ./ci/run-tests.sh
  artifacts:
    when: always
    reports:
      cobertura: coverage.xml
      junit: report.xml

# Using nodejs, deprecated since the elm caching issue
build-frontend:
  image: node:17.4
  stage: test
  script:
    - ./ci/build-frontend.sh
  cache:
    key: elm
    paths:
      - .cache/elm
  artifacts:
    paths:
      - frontend/output

# Using Nix - a fallback for caching issues
#build-frontend:
#  image: nixos/nix:2.6.0
#  stage: test
#  script:
#    - ./ci/build-frontend-using-nix.sh
#  artifacts:
#    paths:
#      - frontend/output

upload-webserver:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: upload-docker
  variables:
    # To deploy this to main, we need a slug, not an SHA, actually. Need to fix that.
    IMAGE_SLUG_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    IMAGE_COMMIT_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  only:
    - tags
    - master
    - datasets
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR" --dockerfile "$CI_PROJECT_DIR/Dockerfile" --destination "$IMAGE_SLUG_TAG" --destination "$IMAGE_COMMIT_TAG"

upload-webserver-manual:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: upload-docker
  variables:
    # To deploy this to main, we need a slug, not an SHA, actually. Need to fix that.
    IMAGE_SLUG_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    IMAGE_COMMIT_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  when: manual
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR" --dockerfile "$CI_PROJECT_DIR/Dockerfile" --destination "$IMAGE_SLUG_TAG" --destination "$IMAGE_COMMIT_TAG"

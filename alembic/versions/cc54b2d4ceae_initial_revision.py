"""Initial revision

Revision ID: cc54b2d4ceae
Revises: 
Create Date: 2021-04-06 10:44:56.465016

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "cc54b2d4ceae"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "AmbiguityParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("software", sa.String(), nullable=False),
        sa.Column("software_version", sa.String(), nullable=True),
        sa.Column("software_git_repository", sa.Text(), nullable=True),
        sa.Column("software_git_sha", sa.String(), nullable=True),
        sa.Column("parameters", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Attributo",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("suffix", sa.String(length=255), nullable=True),
        sa.Column(
            "associated_table",
            sa.Enum("RUN", "SAMPLE", name="associatedtable"),
            nullable=False,
        ),
        sa.Column("json_schema", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("name", "associated_table"),
    )
    op.create_table(
        "HitFindingParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("min_peaks", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "IntegrationParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("method", sa.String(), nullable=True),
        sa.Column("center_boxes", sa.Boolean(), nullable=True),
        sa.Column("overpredict", sa.Boolean(), nullable=True),
        sa.Column("push_res", sa.Float(), nullable=True),
        sa.Column("radius_inner", sa.Integer(), nullable=True),
        sa.Column("radius_middle", sa.Integer(), nullable=True),
        sa.Column("radius_outer", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "MergeParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("software", sa.String(), nullable=False),
        sa.Column("software_version", sa.String(), nullable=True),
        sa.Column("software_git_repository", sa.Text(), nullable=True),
        sa.Column("software_git_sha", sa.String(), nullable=True),
        sa.Column("command_line", sa.Text(), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=False),
        sa.Column("partiality_model", sa.String(), nullable=True),
        sa.Column("num_iterations", sa.Integer(), nullable=True),
        sa.Column("scale_linear", sa.Boolean(), nullable=True),
        sa.Column("scale_bfactor", sa.Boolean(), nullable=True),
        sa.Column("post_refine", sa.Boolean(), nullable=True),
        sa.Column("symmetry", sa.String(), nullable=True),
        sa.Column("polarization", sa.String(), nullable=True),
        sa.Column("min_measurements", sa.Integer(), nullable=True),
        sa.Column("max_adu", sa.Float(), nullable=True),
        sa.Column("min_res", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Proposal",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("metadata", sa.JSON(), nullable=True),
        sa.Column("admin_password", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Sample",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("compounds", sa.JSON(), nullable=True),
        sa.Column("micrograph", sa.Text(), nullable=True),
        sa.Column("protocol", sa.Text(), nullable=True),
        sa.Column("modified", sa.DateTime(), nullable=False),
        sa.Column("attributi", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(["target_id"], ["Target.id"], use_alter=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Target",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("short_name", sa.String(length=255), nullable=False),
        sa.Column("molecular_weight", sa.Float(), nullable=True),
        sa.Column("uniprot_id", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "MergeResults",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("merge_parameters_id", sa.Integer(), nullable=False),
        sa.Column("result_hkl_filename", sa.Text(), nullable=True),
        sa.Column("result_mtz_filename", sa.Text(), nullable=True),
        sa.Column("rsplit", sa.Float(), nullable=False),
        sa.Column("cc_half", sa.Float(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["merge_parameters_id"],
            ["MergeParameters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Run",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("modified", sa.DateTime(), nullable=False),
        sa.Column("proposal_id", sa.Integer(), nullable=False),
        sa.Column("sample_id", sa.Integer(), nullable=True),
        sa.Column("attributi", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["proposal_id"],
            ["Proposal.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sample_id"],
            ["Sample.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "DataSource",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("run_id", sa.Integer(), nullable=False),
        sa.Column("source", sa.JSON(), nullable=True),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("number_of_frames", sa.Integer(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["run_id"], ["Run.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "RunComment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("run_id", sa.Integer(), nullable=True),
        sa.Column("author", sa.String(length=255), nullable=False),
        sa.Column("comment_text", sa.String(length=255), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["run_id"], ["Run.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "PeakSearchParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("method", sa.String(), nullable=False),
        sa.Column("software", sa.String(), nullable=False),
        sa.Column("software_version", sa.String(), nullable=True),
        sa.Column("software_git_repository", sa.Text(), nullable=True),
        sa.Column("software_git_sha", sa.String(), nullable=True),
        sa.Column("command_line", sa.Text(), nullable=False),
        sa.Column("max_num_peaks", sa.Float(), nullable=True),
        sa.Column("adc_threshold", sa.Float(), nullable=True),
        sa.Column("minimum_snr", sa.Float(), nullable=True),
        sa.Column("min_pixel_count", sa.Float(), nullable=True),
        sa.Column("max_pixel_count", sa.Float(), nullable=True),
        sa.Column("min_res", sa.Float(), nullable=True),
        sa.Column("max_res", sa.Float(), nullable=True),
        sa.Column("bad_pixel_filename", sa.Text(), nullable=True),
        sa.Column("local_bg_radius", sa.Float(), nullable=True),
        sa.Column("min_peak_over_neighbor", sa.Float(), nullable=True),
        sa.Column("min_snr_biggest_pix", sa.Float(), nullable=True),
        sa.Column("min_snr_peak_pix", sa.Float(), nullable=True),
        sa.Column("min_sig", sa.Float(), nullable=True),
        sa.Column("min_squared_gradient", sa.Float(), nullable=True),
        sa.Column("geometry_filename", sa.Text(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["data_source_id"],
            ["DataSource.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "HitFindingResults",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("peak_search_parameters_id", sa.Integer(), nullable=False),
        sa.Column("hit_finding_parameters_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("number_of_hits", sa.Integer(), nullable=False),
        sa.Column("hit_rate", sa.Float(), nullable=False),
        sa.Column("result_filename", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["hit_finding_parameters_id"],
            ["HitFindingParameters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["peak_search_parameters_id"],
            ["PeakSearchParameters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "IndexingParameters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hit_finding_results_id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("software", sa.String(), nullable=False),
        sa.Column("software_version", sa.String(), nullable=True),
        sa.Column("software_git_repository", sa.Text(), nullable=True),
        sa.Column("software_git_sha", sa.String(), nullable=True),
        sa.Column("command_line", sa.Text(), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=False),
        sa.Column("methods", sa.JSON(), nullable=True),
        sa.Column("target_cell_filename", sa.Text(), nullable=True),
        sa.Column("geometry", sa.Text(), nullable=True),
        sa.Column("geometry_filename", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["hit_finding_results_id"],
            ["HitFindingResults.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "IndexingResults",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("indexing_parameters_id", sa.Integer(), nullable=False),
        sa.Column("integration_parameters_id", sa.Integer(), nullable=False),
        sa.Column("ambiguity_parameters_id", sa.Integer(), nullable=True),
        sa.Column("tag", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("result_filename", sa.Text(), nullable=True),
        sa.Column("num_indexed", sa.Integer(), nullable=False),
        sa.Column("num_crystals", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ambiguity_parameters_id"],
            ["AmbiguityParameters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["indexing_parameters_id"],
            ["IndexingParameters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["integration_parameters_id"],
            ["IntegrationParameters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "MergeHasIndexing",
        sa.Column("merge_results_id", sa.Integer(), nullable=False),
        sa.Column("indexing_results_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["indexing_results_id"],
            ["IndexingResults.id"],
        ),
        sa.ForeignKeyConstraint(
            ["merge_results_id"],
            ["MergeResults.id"],
        ),
        sa.PrimaryKeyConstraint("merge_results_id", "indexing_results_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("MergeHasIndexing")
    op.drop_table("IndexingResults")
    op.drop_table("IndexingParameters")
    op.drop_table("HitFindingResults")
    op.drop_table("PeakSearchParameters")
    op.drop_table("RunComment")
    op.drop_table("DataSource")
    op.drop_table("Run")
    op.drop_table("MergeResults")
    op.drop_table("Target")
    op.drop_table("Sample")
    op.drop_table("Proposal")
    op.drop_table("MergeParameters")
    op.drop_table("IntegrationParameters")
    op.drop_table("HitFindingParameters")
    op.drop_table("Attributo")
    op.drop_table("AmbiguityParameters")
    # ### end Alembic commands ###
